upstream app_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response

    server web:8000 fail_timeout=0;
    # for a TCP configuration
    # server 192.168.0.7:8000 fail_timeout=0;
}

server {
    # use 'listen 80 deferred;' for Linux
    # use 'listen 80 accept_filter=httpready;' for FreeBSD

    listen 80;
    client_max_body_size 4G;
    gzip on;
    gzip_types 
      image/*
      video/*
      audio/*
      application/pdf
      text/html text/css text/xml application/javascript
      application/json;
    server_name funpass.io www.funpass.io localhost;
    root /var/www/funpass/frontend/;

    keepalive_timeout 5;
    # all assets contain hash in filename, cache forever

    location / {
        autoindex on;
        expires off;
        add_header Cache-Control "public, max-age=0, s-maxage=0, must-revalidate" always;
        try_files $uri /index.html =404;
    }

    location /static {
        autoindex on;
        alias /var/www/funpass/statics;
    }

    location /media {
        autoindex on;
        alias /var/www/funpass/media;
    }

    location /api {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;
        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;
        default_type text/html;
        if (!-f $request_filename) {
            proxy_pass http://app_server;
            break;
        }
    }
}

